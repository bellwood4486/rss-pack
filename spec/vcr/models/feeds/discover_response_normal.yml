---
http_interactions:
- request:
    method: get
    uri: http://weblog.rubyonrails.org/
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - GitHub.com
      Content-Type:
      - text/html; charset=utf-8
      Last-Modified:
      - Wed, 27 Sep 2017 15:00:53 GMT
      Access-Control-Allow-Origin:
      - "*"
      Expires:
      - Sat, 07 Oct 2017 07:23:58 GMT
      Cache-Control:
      - max-age=600
      X-Github-Request-Id:
      - 65DE:1BE5A:681C573:6EB091F:59D87EB5
      Content-Length:
      - '14724'
      Accept-Ranges:
      - bytes
      Date:
      - Sat, 07 Oct 2017 07:21:39 GMT
      Via:
      - 1.1 varnish
      Age:
      - '0'
      Connection:
      - keep-alive
      X-Served-By:
      - cache-nrt6120-NRT
      X-Cache:
      - MISS
      X-Cache-Hits:
      - '0'
      X-Timer:
      - S1507360899.980531,VS0,VE112
      Vary:
      - Accept-Encoding
      X-Fastly-Request-Id:
      - a63b7710b30ec53b51bc6222e0d8e210cc0c7491
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Sat, 07 Oct 2017 07:21:39 GMT
recorded_with: VCR 3.0.3
